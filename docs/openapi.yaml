openapi: 3.0.3
info:
  title: svc-kg
  version: "1.1.0"
  description: Microserviço de grafos (pyVis) com dados do Supabase RPC.
servers:
- url: /
paths:
  /health:
    get:
      summary: Healthcheck
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /openapi.yaml:
    get:
      summary: Baixa o OpenAPI YAML deste serviço
      responses:
        "200":
          description: YAML
          content:
            text/plain:
              schema:
                type: string
  /graph/members:
    get:
      summary: Grafo (JSON) de membros/ relações
      parameters:
      - in: query
        name: p_faccao_id
        required: true
        schema: { type: string }
      - in: query
        name: p_include_co
        required: false
        schema: { type: boolean, default: true }
      - in: query
        name: p_max_pairs
        required: false
        schema: { type: integer, default: 500, minimum: 1, maximum: 20000 }
      - in: query
        name: max_nodes
        required: false
        schema: { type: integer, default: 0, minimum: 0 }
      - in: query
        name: max_edges
        required: false
        schema: { type: integer, default: 0, minimum: 0 }
      responses:
        "200":
          description: Grafo normalizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  nodes:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: string }
                        label: { type: string }
                        group: { type: string }
                        title: { type: string }
                  edges:
                    type: array
                    items:
                      type: object
                      properties:
                        source: { type: string }
                        target: { type: string }
                        label: { type: string }
                  meta:
                    type: object
        "4XX": { description: Erro de entrada/RPC }
        "5XX": { description: Erro interno/RPC }
  /graph/members/html:
    get:
      summary: Grafo em HTML (pyVis)
      parameters:
      - in: query
        name: p_faccao_id
        required: true
        schema: { type: string }
      - in: query
        name: p_include_co
        required: false
        schema: { type: boolean, default: true }
      - in: query
        name: p_max_pairs
        required: false
        schema: { type: integer, default: 500, minimum: 1, maximum: 20000 }
      - in: query
        name: max_nodes
        required: false
        schema: { type: integer, default: 0, minimum: 0 }
      - in: query
        name: max_edges
        required: false
        schema: { type: integer, default: 0, minimum: 0 }
      - in: query
        name: title
        required: false
        schema: { type: string, default: "Relações: Membros x Facções x Funções" }
      responses:
        "200":
          description: HTML interativo
          content:
            text/html:
              schema:
                type: string
