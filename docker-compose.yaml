# docker-compose.coolify.yml
version: "3.9"

services:
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      {
        test: ["CMD", "redis-cli", "ping"],
        interval: 10s,
        timeout: 5s,
        retries: 5
      }
    restart: unless-stopped

  svc-kg:
    build: { context: ., dockerfile: Dockerfile }
    image: svc-kg:latest
    env_file: [.env]
    environment:
      APP_ENV: production
      PORT: ${PORT:-8080}
      WORKERS: ${WORKERS:-2}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CORS_ALLOW_ORIGINS: ${CORS_ALLOW_ORIGINS:-*}
      CORS_ALLOW_CREDENTIALS: ${CORS_ALLOW_CREDENTIALS:-false}
      CORS_ALLOW_HEADERS: ${CORS_ALLOW_HEADERS:-Authorization,Content-Type}
      CORS_ALLOW_METHODS: ${CORS_ALLOW_METHODS:-GET,POST,OPTIONS}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      SUPABASE_RPC_FN: ${SUPABASE_RPC_FN:-get_graph_membros}
      SUPABASE_TIMEOUT: ${SUPABASE_TIMEOUT:-15}
      CACHE_STATIC_MAX_AGE: ${CACHE_STATIC_MAX_AGE:-86400}
      CACHE_API_TTL: ${CACHE_API_TTL:-60}
      ENABLE_REDIS_CACHE: ${ENABLE_REDIS_CACHE:-true}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    depends_on:
      redis: { condition: service_healthy }
    volumes:
      - ./assets:/app/assets
      - ./static:/app/static
      - ./docs:/app/docs:ro
      - ./tmp:/app/tmp
    healthcheck:
      test:
        ["CMD-SHELL", "curl -sf http://localhost:${PORT:-8080}/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    # ðŸ‘‰ resolvers DNS pÃºblicos (opcional; use se a infra nÃ£o fornece DNS)
    dns:
      - 1.1.1.1
      - 8.8.8.8
    restart: unless-stopped
