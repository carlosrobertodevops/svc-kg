version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kg
      POSTGRES_USER: kg
      POSTGRES_PASSWORD: kg
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kg -d kg"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "6379:6379"

  svc-kg:
    build:
      context: .
      dockerfile: Dockerfile
    image: svc-kg:latest
    env_file:
      - .env
    environment:
      APP_ENV: development
      PORT: 8080
      WORKERS: 2
      LOG_LEVEL: debug

      CORS_ALLOW_ORIGINS: "*"
      CORS_ALLOW_CREDENTIALS: "false"
      CORS_ALLOW_HEADERS: "Authorization,Content-Type"
      CORS_ALLOW_METHODS: "GET,POST,OPTIONS"

      # Local usa Postgres direto (n√£o Supabase)
      DATABASE_URL: "postgresql://kg:kg@db:5432/kg"
      SUPABASE_URL: ""
      SUPABASE_SERVICE_KEY: ""

      CACHE_STATIC_MAX_AGE: 3600
      CACHE_API_TTL: 30

      ENABLE_REDIS_CACHE: "true"
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./assets:/app/assets
      - ./static:/app/static
      - ./docs:/app/docs:ro
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8080/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata:
