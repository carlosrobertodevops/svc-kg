openapi: 3.0.3
info:
  title: svc-kg
  version: "1.5.0"
  description: Microserviço de Knowledge Graph.
servers: [ { url: / } ]
paths:
  /live:
    get: { summary: Liveness, responses: { "200": { description: ok } } }
  /ready:
    get:
      summary: Readiness (checa Redis e backend)
      responses:
        "200": { description: pronto }
        "503": { description: dependências indisponíveis }
  /debug/config:
    get:
      summary: Config sanitizada
      responses: { "200": { description: ok } }
  /health:
    get: { summary: Health (estático), responses: { "200": { description: ok } } }
  /v1/graph/membros:
    get:
      summary: Grafo (via et_graph_membros/get_graph_membros)
      parameters:
      - { name: faccao_id, in: query, required: false, schema: { type: integer, format: int64, nullable: true } }
      - { name: include_co, in: query, required: false, schema: { type: boolean, default: true } }
      - { name: max_pairs, in: query, required: false, schema: { type: integer, default: 8000 } }
      - { name: max_nodes, in: query, required: false, schema: { type: integer, default: 2000 } }
      - { name: max_edges, in: query, required: false, schema: { type: integer, default: 4000 } }
      - { name: cache, in: query, required: false, schema: { type: boolean, default: true } }
      responses: { "200": { description: ok } }
  /graph/members:
    get:
      summary: (Compat) Mesmo de /v1/graph/membros porém com p_* params
      parameters:
      - { name: p_faccao_id, in: query, required: false, schema: { type: integer, format: int64, nullable: true } }
      - { name: p_include_co, in: query, required: false, schema: { type: boolean, default: true } }
      - { name: p_max_pairs, in: query, required: false, schema: { type: integer, default: 8000 } }
      - { name: max_nodes, in: query, required: false, schema: { type: integer, default: 2000 } }
      - { name: max_edges, in: query, required: false, schema: { type: integer, default: 4000 } }
      - { name: cache, in: query, required: false, schema: { type: boolean, default: true } }
      responses: { "200": { description: ok } }
  /v1/nodes/{node_id}/neighbors:
    get:
      summary: Subgrafo (raio=1)
      parameters:
      - { name: node_id, in: path, required: true, schema: { type: string } }
      - { name: include_co, in: query, required: false, schema: { type: boolean, default: true } }
      - { name: max_pairs, in: query, required: false, schema: { type: integer, default: 3000 } }
      responses: { "200": { description: ok } }
