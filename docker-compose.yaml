openapi: 3.0.3
info:
  title: svc-kg
  version: "1.0.0"
  description: |
    Micro-serviço para visualização de grafos (pyVis) com dados vindos do Supabase (RPC `get_graph_membros`).

servers:
  - url: http://localhost:8080
    description: Local
  - url: https://seu-dominio-svc-kg.com
    description: Produção

paths:
  /health:
    get:
      summary: Healthcheck
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                status: ok
                version: "1.0.0"
                redis_enabled: true
                supabase_url: https://supabase.mondaha.com

  /graph/members:
    get:
      summary: Retorna grafo em JSON pronto para pyVis/FlutterFlow
      parameters:
        - name: p_faccao_id
          in: query
          required: true
          schema: { type: string }
          description: ID da facção (obrigatório)
        - name: p_include_co
          in: query
          required: false
          schema: { type: boolean, default: true }
        - name: p_max_pairs
          in: query
          required: false
          schema: { type: integer, default: 500, minimum: 1, maximum: 5000 }
        - name: preview
          in: query
          schema: { type: boolean, default: false }
        - name: max_nodes
          in: query
          schema: { type: integer, default: 250, minimum: 1, maximum: 5000 }
        - name: max_edges
          in: query
          schema: { type: integer, default: 500, minimum: 1, maximum: 20000 }
      responses:
        "200":
          description: JSON no schema {nodes, edges}
          headers:
            Cache-Control: { schema: { type: string } }
            ETag: { schema: { type: string } }
          content:
            application/json:
              schema:
                type: object
                properties:
                  nodes:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: string }
                        label: { type: string }
                        group: { type: string }
                        title: { type: string }
                        value: { type: number }
                  edges:
                    type: array
                    items:
                      type: object
                      properties:
                        from: { type: string }
                        to: { type: string }
                        label: { type: string }
                        weight: { type: number }
              examples:
                demo:
                  value:
                    nodes:
                      - { id: "u1", label: "Membro 1", group: "fac1", value: 3 }
                      - { id: "u2", label: "Membro 2", group: "fac1", value: 1 }
                    edges:
                      - { from: "u1", to: "u2", label: "co", weight: 2 }

  /graph/members/html:
    get:
      summary: Retorna página HTML com grafo pyVis embutido
      parameters:
        - {
            name: p_faccao_id,
            in: query,
            required: true,
            schema: { type: string }
          }
        - {
            name: p_include_co,
            in: query,
            schema: { type: boolean, default: true }
          }
        - {
            name: p_max_pairs,
            in: query,
            schema: { type: integer, default: 500, minimum: 1, maximum: 5000 }
          }
        - {
            name: preview,
            in: query,
            schema: { type: boolean, default: false }
          }
        - {
            name: max_nodes,
            in: query,
            schema: { type: integer, default: 250, minimum: 1, maximum: 5000 }
          }
        - {
            name: max_edges,
            in: query,
            schema: { type: integer, default: 500, minimum: 1, maximum: 20000 }
          }
        - { name: physics, in: query, schema: { type: boolean, default: true } }
        - {
            name: height,
            in: query,
            schema: { type: string, default: "650px" }
          }
        - { name: width, in: query, schema: { type: string, default: "100%" } }
      responses:
        "200":
          description: HTML do pyVis
          headers:
            Cache-Control: { schema: { type: string } }
          content:
            text/html:
              schema: { type: string }

  /openapi.yaml:
    get:
      summary: Baixa o OpenAPI YAML estático
      responses:
        "200":
          description: YAML
          content:
            text/yaml:
              schema: { type: string }
